print("x")
} else{
print("y")
}
myfunction <- function(x){
if(grepl(",",x)){
for(i in x.length-1:1){
if(i==","){
x <- substr(x,i+1)
}
}
}
}
lapply(origin_facts,myfunction)
myfunction <- function(x){
if(grepl(",",x)){
count <- nchar(x)
for(i in count:1){
if(i==","){
x <- substr(x,i+1)
}
}
}
}
lapply(origin_facts,myfunction)
myfunction <- function(x){
if(grepl(",",x)){
for(i in length(x):1){
if(i==","){
x <- substr(x,i+1)
}
}
}
}
lapply(origin_facts,myfunction)
origin_facts
myfunction <- function(x){
if(grepl(",",x)){
print("xx ")
}
}
lapply(origin_facts,myfunction)
}
origin_facts
lapply(origin_facts,myfunction)
myfunction <- function(x){
if(grepl(",",x)){
for(i in length(x):1){
if(i==","){
x <- substr(x,i+1)
}
}
}
print(x)
}
lapply(origin_facts,myfunction)
myfunction <- function(x){
if(grepl(",",x)){
for(i in length(x):1){
if(i==","){
x <- substr(x,i+1)
break
}
}
}
print(x)
}
lapply(origin_facts,myfunction)
myfunction <- function(x){
if(grepl(",",x)){
for(i in length(x):1){
if(i==","){
print(i)
x <- substr(x,i+1)
break
}
}
}
}
lapply(origin_facts,myfunction)
myfunction <- function(x){
if(grepl(",",x)){
for(i in seq(length(x),1,-1)){
if(i==","){
print(i)
x <- substr(x,i+1)
break
}
}
}
}
lapply(origin_facts,myfunction)
lapply(origin_facts,myfunction)
myfunction <- function(x){
if(grepl(",",x)){
for(i in seq(length(x),1,-1)){
if(x[i]i==","){
x <- substr(x,i+1)
break
}
}
}
}
lapply(origin_facts,myfunction)
myfunction <- function(x){
if(grepl(",",x)){
for(i in seq(length(x),1,-1)){
if(x[i]==","){
x <- substr(x,i+1)
break
}
}
}
}
lapply(origin_facts,myfunction)
myfunction <- function(x){
if(grepl(",",x)){
for(i in seq(length(x),1,-1)){
if(x[i]==","){
x <- substr(x,i)
break
}
}
print(x)
}
}
lapply(origin_facts,myfunction)
myfunction <- function(x){
if(grepl(",",x)){
for(i in seq(length(x),1,-1)){
if(x[i]==","){
x <- substr(x,i)
break
}
}
}
print(x)
}
lapply(origin_facts,myfunction)
myfunction <- function(x){
if(grepl(",",x)){
for(i in seq(length(x),1,-1)){
if(x[i]==","){
print("xx ")
x <- substr(x,i)
break
}
}
}
}
lapply(origin_facts,myfunction)
myfunction <- function(x){
if(grepl(",",x)){
count = length(x)
while(TRUE){
if(x[count]==","){
x <- substr(x,count)
break
} else{
count <- count - 1
}
}
}
}
lapply(origin_facts,myfunction)
myfunction <- function(x){
if(grepl(",",x)){
count = length(x) -1
while(TRUE){
if(x[count]==","){
x <- substr(x,count)
break
} else{
count <- count - 1
}
}
}
}
lapply(origin_facts,myfunction)
times_Data <- read.csv("~/Downloads/world-university-ranking/timesData.csv")
View(times_Data)
head(times_Data)
unique(times_Data$year)
library(Amelia)
library(Amelia)
missmap(times_Data)
eleven_Dat <- times_Data[which(times_Data$year=="2011")]
eleven_Dat <- times_Data[which(times_Data$year=="2011"),]
eleven_Dat
sixteen_Dat <- times_Data[which(times_Data$year=="2016"),]
pie <- ggplot(times_Data, aes(x = factor(1), fill = factor(country))) +
geom_bar(width = 1)
library(ggplot2)
pie_2011 <- ggplot(times_Data, aes(x = factor(1), fill = factor(country))) +
geom_bar(width = 1)
pie_2011 + coord_polar(theta = "y")
eleven_Dat <- times_Data[which(times_Data$year=="2011" & times_Data$world_rank <= 50),]
eleven_Dat <- times_Data[which(times_Data$year=="2011" & times_Data$world_rank < 50),]
eleven_Dat <- times_Data[which(times_Data$year=="2011" & as.numeric(times_Data$world_rank) <= 50),]
pie_2011 <- ggplot(times_Data, aes(x = factor(1), fill = factor(country))) +
geom_bar(width = 1)
pie_2011 + coord_polar(theta = "y")
as.numeric(gsub("\\D", "", times_Data$female_male_ratio))
as.numeric(gsub("\\D", "", times_Data$female_male_ratio[1]))
as.numeric(gsub("\\D", "", times_Data$female_male_ratio[2]))
times_Data$female_male_ratio[2]
as.numeric(gsub("\\D", " ", times_Data$female_male_ratio[2]))
times_Data$female_male_ratio
as.numeric(gsub("\\D", " ", times_Data$female_male_ratio))
as.numeric(gsub("\\D", "", times_Data$female_male_ratio))
as.numeric(gsub("\\D", " ", eleven_Data$female_male_ratio))
as.numeric(gsub("\\D", "", eleven_Data$female_male_ratio))
as.numeric(gsub("\\D", "", eleven_Dat$female_male_ratio))
as.numeric(gsub("\\D", "", sixteen_Dat$female_male_ratio))
as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2011",]$female_male_ratio))
as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2011",]$female_male_ratio))
as.numeric(gsub("\\D", "", times_Data$female_male_ratio))
as.numeric(gsub("\\D", "", times_Data$female_male_ratio))
as.numeric(gsub("\\D", "", times_Data[]$female_male_ratio))
as.numeric(gsub("\\D", "", times_Data[which()]$female_male_ratio))
as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2011")]$female_male_ratio))
as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2011"),]$female_male_ratio))
eleven_mf <- as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2011"),]$female_male_ratio))
twelve_mf <- as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2011"),]$female_male_ratio))
thirteen_mf <- as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2011"),]$female_male_ratio))
fourteen_mf <- as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2011"),]$female_male_ratio))
fifteen_mf <- as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2011"),]$female_male_ratio))
eleven_mf <- as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2011"),]$female_male_ratio))
twelve_mf <- as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2012"),]$female_male_ratio))
thirteen_mf <- as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2013"),]$female_male_ratio))
fourteen_mf <- as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2014"),]$female_male_ratio))
fifteen_mf <- as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2015"),]$female_male_ratio))
sixteen_mf <- as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2016"),]$female_male_ratio))
eleven_mf <- na.omit(as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2011"),]$female_male_ratio)))
eleven_mf
twelve_mf <- na.rm(as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2012"),]$female_male_ratio)))
eleven_mf <- na.omit(as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2011"),]$female_male_ratio)))
twelve_mf <- na.omit(as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2012"),]$female_male_ratio)))
thirteen_mf <- na.omit(as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2013"),]$female_male_ratio)))
fourteen_mf <- na.omit(as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2014"),]$female_male_ratio)))
fifteen_mf <- na.omit(as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2015"),]$female_male_ratio)))
sixteen_mf <- na.omit(as.numeric(gsub("\\D", "", times_Data[which(times_Data$year=="2016"),]$female_male_ratio)))
sex_Table <- [eleven_mf/100,twelve_mf/100,thirteen_mf/100,
sex_Table <- data.frame[eleven_mf/100,twelve_mf/100,thirteen_mf/100,
fourteen_mf/100,fifteen_mf/100,sixteen_mf/100;
sex_Table <- data.frame(c(eleven_mf/100,twelve_mf/100,thirteen_mf/100,
fourteen_mf/100,fifteen_mf/100,sixteen_mf/100),
c(eleven_mf%%100,twelve_mf%%100,thirteen_mf%%100,
fourteen_mf%%100,fifteen_mf%%100,sixteen_mf%%100))
sex_Table
eleven_mf/100
eleven_mf%%100
sex_Table <- data.frame(c(eleven_mf%/%100,twelve_mf%/%100,thirteen_mf%/%100,
fourteen_mf%/%100,fifteen_mf%/%100,sixteen_mf%/%100),
c(eleven_mf%%100,twelve_mf%%100,thirteen_mf%%100,
fourteen_mf%%100,fifteen_mf%%100,sixteen_mf%%100))
sex_Table
eleven_mf%/%100
eleven_mf%%100
eleven_mf%/%100
View(sex_Table)
sex_Table <- data.frame(c(eleven_mf%/%100,eleven_mf%%100),c(twelve_mf%/%100,twelve_mf%%100),
c(thirteen_mf%/%100,thirteen_mf%%100),c(fourteen_mf%/%100,fourteen_mf%%100),
c(fifteen_mf%/%100,fifteen_mf%%100),c(sixteen_mf%/%100,sixteen_mf%%100))
sex_Table <- data.frame(c(mean(eleven_mf%/%100),mean(eleven_mf%%100),
c(mean(twelve_mf%/%100),mean(twelve_mf%%100)),
c(mean(thirteen_mf%/%100),mean(thirteen_mf%%100)),
c(mean(fourteen_mf%/%100),mean(fourteen_mf%%100)),
c(mean(fifteen_mf%/%100),mean(fifteen_mf%%100)),
c(mean(sixteen_mf%/%100),mean(sixteen_mf%%100)))
sex_Table <- data.frame(c(mean(eleven_mf%/%100),mean(eleven_mf%%100)),
c(mean(twelve_mf%/%100),mean(twelve_mf%%100)),
c(mean(thirteen_mf%/%100),mean(thirteen_mf%%100)),
c(mean(fourteen_mf%/%100),mean(fourteen_mf%%100)),
c(mean(fifteen_mf%/%100),mean(fifteen_mf%%100)),
c(mean(sixteen_mf%/%100),mean(sixteen_mf%%100)))
sex_Table
plot(sex_Table)
summary(times_Data)
top_50 <- times_Data[which(times_Data$world_rank <= 50)]
top_50 <- times_Data[which(as.numeric(times_Data$world_rank) <= 50)]
times_Data
head(times_Data)
setwd("~/Desktop/Patient Discharge")
care_Type <- data.frame(read.csv("type_Of_Care copy.csv",header = TRUE))
fac <- data.frame(read.csv("facilities.csv",header = TRUE))
View(care_Type)
View(fac)
care_Type <- data.frame(read.csv("type_Of_Care copy.csv",header = TRUE))
library(dplyr)
library(plyr)
library(readr)
library(ggplot2)
library(stringr)
library(psych)
library(doBy)
library(quantreg)
library(calibrate)
county <- "SAN DIEGO"
care_Type_By_Year <- ddply(subset(merge(fac, care_Type),County.Name==county),.(Year,Type.Of.Care), colwise(sum,"Count"))
ggplot(care_Type_By_Year,
aes(x=Year,y=Count,color=Type.Of.Care))+
geom_point(stat="identity",
position="identity")+
labs(title="Number of Hospital Visits by Age in San Diego",
x="Year",
y="Number of Cases")+
xlim(2009,2016)+
geom_smooth(method='lm',
fullrange=TRUE)
View(care_Type_By_Year)
care_Type_By_Year <- subset(care_Type_By_Year,Type.Of.Care!="Unknown")
ggplot(care_Type_By_Year,
aes(x=Year,y=Count,color=Type.Of.Care))+
geom_point(stat="identity",
position="identity")+
labs(title="Number of Hospital Visits by Age in San Diego",
x="Year",
y="Number of Cases")+
xlim(2009,2016)+
geom_smooth(method='lm',
fullrange=TRUE)
care_Type_By_Year <- subset(care_Type_By_Year,Type.Of.Care!="Unknown" & Type.Of.Care!="Acute")
ggplot(care_Type_By_Year,
aes(x=Year,y=Count,color=Type.Of.Care))+
geom_point(stat="identity",
position="identity")+
labs(title="Number of Hospital Visits by Age in San Diego",
x="Year",
y="Number of Cases")+
xlim(2009,2016)+
geom_smooth(method='lm',
fullrange=TRUE)
diagnosis_By_Year <- ddply(subset(merge(fac, diagnosis),County.Name==county),.(Year,Type.Of.Care), colwise(sum,"Count"))
diagnosis <- data.frame(read.csv("diagnosis copy.csv",header = TRUE))
diagnosis_By_Year <- ddply(subset(merge(fac, diagnosis),County.Name==county),.(Year,Type.Of.Care), colwise(sum,"Count"))
View(diagnosis)
diagnosis_By_Year <- ddply(subset(merge(fac, diagnosis),County.Name==county),.(Year,Principal.Diagnosis.Group), colwise(sum,"Count"))
View(diagnosis_By_Year)
summary(diagnosis_By_Year)
ggplot(diagnosis_By_Year,
aes(x=Year,y=Count,color=Type.Of.Care))+
geom_point(stat="identity",
position="identity")+
labs(title="Number of Hospital Visits by Age in San Diego",
x="Year",
y="Number of Cases")+
xlim(2009,2016)+
geom_smooth(method='lm',
fullrange=TRUE)
ggplot(diagnosis_By_Year,
aes(x=Year,y=Count,color=Principal.Diagnosis.Group))+
geom_point(stat="identity",
position="identity")+
labs(title="Number of Hospital Visits by Age in San Diego",
x="Year",
y="Number of Cases")+
xlim(2009,2016)+
geom_smooth(method='lm',
fullrange=TRUE)
ggplot(diagnosis_By_Year,
aes(x=Year,y=Count,color=Principal.Diagnosis.Group))+
geom_point(stat="identity",
position="identity")+
labs(title="Number of Hospital Visits by Age in San Diego",
x="Year",
y="Number of Cases")+
xlim(2009,2016)+
geom_smooth(method='loess',
fullrange=TRUE)
warnings()
ggplot(diagnosis_By_Year,
aes(x=Year,y=Count,color=Principal.Diagnosis.Group))+
geom_point(stat="identity",
position="identity")+
labs(title="Number of Hospital Visits by Age in San Diego",
x="Year",
y="Number of Cases")+
xlim(2009,2016)+
geom_smooth(method='lm',
fullrange=TRUE)
procedure <- data.frame(read.csv("procedure copy.csv",header = TRUE))
View(procedure)
View(fac)
procedure <- data.frame(read.csv("procedure copy.csv",header = TRUE))
procedure_By_Year <- ddply(subset(merge(fac, procedure),County.Name==county),.(Year,Principal_Procedure_Group), colwise(sum,"Count"))
ggplot(procedure_By_Year,
aes(x=Year,y=Count,color=Principal_Procedure_Group))+
geom_point(stat="identity",
position="identity")+
labs(title="Number of Hospital Visits by Age in San Diego",
x="Year",
y="Number of Cases")+
xlim(2009,2016)+
geom_smooth(method='lm',
fullrange=TRUE)
ggplot(diagnosis_By_Year,
aes(x=Year,y=Count,color=Principal.Diagnosis.Group))+
geom_point(stat="identity",
position="identity")+
labs(title="Number of Hospital Visits by Diagnosis in San Diego",
x="Year",
y="Number of Cases")+
xlim(2009,2016)+
geom_smooth(method='lm',
fullrange=TRUE)
injury_By_Year <- ddply(subset(merge(fac, injury),County.Name==county),.(Year,Principal.Injury.Group), colwise(sum,"Count"))
injury <- data.frame(read.csv("injury copy.csv",header = TRUE))
injury_By_Year <- ddply(subset(merge(fac, injury),County.Name==county),.(Year,Principal.Injury.Group), colwise(sum,"Count"))
#Got rid of of one value which threw off data
injury_By_Year <- subset(injury_By_Year,Count!=2895)
#Now I will attempt to put a fit line through
ggplot(injury_By_Year,
aes(x=Year,y=Count,color=Principal.Injury.Group))+
geom_point(stat="identity",
position="identity")+
labs(title="Number of Hospital Visits by Injury in San Diego",
x="Year",
y="Number of Cases")+
xlim(2009,2016)+
geom_smooth(method='lm',
fullrange=TRUE)
mis/comp_Data <- subset(injury_By_Year,Principal.Injury.Group==Misadventures/Complications)
mis/comp_Data <- subset(injury_By_Year,Principal.Injury.Group=="Misadventures/Complications")
injury_By_Year
mis_Data <- subset(injury_By_Year,Principal.Injury.Group=="Misadventures/Complications")
mis_Data
plot(mis_Data)
ggplot(mis_Data, aes(x=Year,y=Count)) + geom_point() + geom_smooth()
m<-nls(y~a*x/(b+x))
m<-nls(mis_Data$Count~a*mis_Data$Year/(b+mis_Data$Year))
x=mis_Data$Year
y=mis_Data$Count
x=c(0,1,2,3,4)
a_start=12200
b_start=2*log(2)/a_start
m<-nls(y~a*exp(-b*x),start=list(a=a_start,b=b_start))
cor(y,predict(m))
lines(x,predict(m),col="red",lty=2,lwd=3)
plot(x,y)
lines(x,predict(m),col="red",lty=2,lwd=3)
plot(x,y)
x=mis_Data$Year
plot(x,y)
lines(x,predict(m),col="red",lty=2,lwd=3)
m<-nls(y~a*exp(-b*x),start=list(a=a_start,b=b_start))
m
m<-nls(y~a*exp(-b*x),start=list(a=a_start,b=b_start))
x=c(0,1,2,3,4)
m<-nls(log(y)~x)
ggplot(injury_By_Year,
aes(x=Year,y=Count,color=Principal.Injury.Group))+
geom_point(stat="identity",
position="identity")+
labs(title="Number of Hospital Visits by Injury in San Diego",
x="Year",
y="Number of Cases")+
xlim(2009,2016)+
geom_smooth(method='lm',
fullrange=TRUE)
injury_By_Year <- ddply(subset(merge(fac, injury),County.Name==county),.(Year,Principal.Injury.Group), colwise(sum,"Count"))
ggplot(injury_By_Year,
aes(x=Year,y=Count,color=Principal.Injury.Group))+
geom_point(stat="identity",
position="identity")+
labs(title="Number of Hospital Visits by Injury in San Diego",
x="Year",
y="Number of Cases")+
xlim(2009,2016)+
geom_smooth(method='lm',
fullrange=TRUE)
mis_Data <- subset(injury_By_Year,Principal.Injury.Group=="Misadventures/Complications")
x=mis_Data$Year
x=c(0,1,2,3,4)
y=mis_Data$Count
a_start=12200
plot(x,y)
x=c(0,1,2,3,4,5)
plot(x,y)
m<-nls(log(y)~x)
exponential.model <- lm(log(y)~ x)
summary(exponential.model)
Counts.exponential2 <- exp(predict(exponential.model,list(x=x)))
plot(x, y)
lines(x, Counts.exponential2,lwd=2, col = "red", xlab = "Time (s)", ylab = "Counts")
exponential.model <- lm(log(y)~ -x)
summary(exponential.model)
Counts.exponential2 <- exp(predict(exponential.model,list(x=x)))
plot(x, y)
lines(x, Counts.exponential2,lwd=2, col = "red", xlab = "Time (s)", ylab = "Counts")
exponential.model <- lm(log(-y)~ x)
summary(exponential.model)
Counts.exponential2 <- exp(predict(exponential.model,list(x=x)))
plot(x, y)
lines(x, Counts.exponential2,lwd=2, col = "red", xlab = "Time (s)", ylab = "Counts")
exponential.model <- lm(y~ log(x))
exponential.model <- lm(y~ exp(x))
summary(exponential.model)
Counts.exponential2 <- exp(predict(exponential.model,list(x=x)))
plot(x, y)
lines(x, Counts.exponential2,lwd=2, col = "red", xlab = "Time (s)", ylab = "Counts")
exponential.model <- lm(exp(y)~ x)
exponential.model <- lm(y~ 1/exp(x))
summary(exponential.model)
Counts.exponential2 <- exp(predict(exponential.model,list(x=x)))
plot(x, y)
lines(x, Counts.exponential2,lwd=2, col = "red", xlab = "Time (s)", ylab = "Counts")
exponential.model <- lm(log(y)~ x)
summary(exponential.model)
Counts.exponential2 <- exp(predict(exponential.model,list(x=x)))
plot(x, y)
lines(x, Counts.exponential2,lwd=2, col = "red", xlab = "Time (s)", ylab = "Counts")
